name: Restrict Push Access

on:
  push:
    branches:
      - '*'
  create:
    branches:
      - '*'  # Trigger on branch creation

permissions:
  contents: write  # Grant write access to repository contents

jobs:
  check-branch-owner:
    runs-on: ubuntu-latest
    name: Check Branch Owner
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load branch ownership data
        id: load_data
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          OWNERS_FILE="${BRANCH_NAME}_owners.json"
          
          # Create a JSON file to store branch ownership if it doesn't exist
          if [ ! -f "$OWNERS_FILE" ]; then
            echo '{}' > "$OWNERS_FILE"
            echo "Created new owners file: $OWNERS_FILE"
          else
            echo "Found existing owners file: $OWNERS_FILE"
          fi

          # Load the current branch ownership data
          BRANCH_OWNERS=$(cat "$OWNERS_FILE")
          echo "Branch Owners: $BRANCH_OWNERS"

          # Check if the branch already has an owner
          BRANCH_CREATOR=$(echo "$BRANCH_OWNERS" | jq -r --arg BRANCH "$BRANCH_NAME" '.[$BRANCH]')
          echo "Branch Creator from JSON: $BRANCH_CREATOR"

          # If there's no owner, set the current actor as the owner
          if [ "$BRANCH_CREATOR" == "null" ]; then
            BRANCH_CREATOR="${GITHUB_ACTOR}"
            # Update the JSON with the new branch owner
            NEW_BRANCH_OWNERS=$(echo "$BRANCH_OWNERS" | jq --arg BRANCH "$BRANCH_NAME" --arg OWNER "$BRANCH_CREATOR" '. + {($BRANCH): $OWNER}')
            echo "$NEW_BRANCH_OWNERS" > "$OWNERS_FILE"
            echo "Set $BRANCH_NAME owner to $BRANCH_CREATOR"
            echo "Updated owners file contents:"
            cat "$OWNERS_FILE"
          fi

          # Set output for later steps
          echo "branch_creator=$BRANCH_CREATOR" >> $GITHUB_ENV

      - name: List files before commit
        run: |
          echo "Current directory contents:"
          ls -la

      - name: Commit and push changes
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          # Check if there are any changes to commit
          if git diff --quiet; then
            echo "No changes to commit."
          else
            git add "${BRANCH_NAME}_owners.json"
            git commit -m "Update branch ownership for ${GITHUB_REF#refs/heads/}" || { echo "Commit failed"; exit 1; }
            git push origin "${GITHUB_REF#refs/heads/}" || { echo "Push failed"; exit 1; }
          fi

      - name: Check if user is branch owner
        run: |
          OWNER="${GITHUB_ACTOR}"
          BRANCH_CREATOR="${{ env.branch_creator }}"

          echo "Current Actor: $OWNER"
          echo "Branch Creator: $BRANCH_CREATOR"

          # Check if the branch creator is the same as the current actor
          if [[ "$BRANCH_CREATOR" != "$OWNER" ]]; then
            echo "You do not have permission to push to this branch."
            exit 1
          else
            echo "Permission granted to push to this branch."
          fi
